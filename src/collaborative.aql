LET products_requested_user_viewed = (
    FOR product IN OUTBOUND requested_user viewings
    RETURN product)
LET users_which_viewed_same_products = (
    FOR product IN products_requested_user_viewed
        FOR user in INBOUND product viewings
            FILTER user._id != requested_user
            RETURN DISTINCT user)
LET products_those_users_viewed = (
    FOR user in users_which_viewed_same_products
        FOR product in OUTBOUND user viewings
            // Should be optional or just lower the weight.
            FILTER product NOT IN products_requested_user_viewed 
            COLLECT p = product INTO viewings_by_product
            LET viewings_by_product_count = LENGTH(viewings_by_product)
            SORT viewings_by_product_count DESC
            RETURN {key: p._key, viewings_count: viewings_by_product_count})
LET products_those_users_commented = (
    FOR user in users_which_viewed_same_products
        FOR product in OUTBOUND user commentings
            // Should be optional or just lower the weight.
            // It is assumed that all commented products where also viewed by the commenter.
            FILTER product NOT IN products_requested_user_viewed 
            COLLECT p = product INTO comments_by_product
            LET comments_by_product_count = LENGTH(comments_by_product)
            SORT comments_by_product_count DESC
            RETURN {key: p._key, comments_count: comments_by_product_count})
LET products = (
    FOR product IN APPEND(products_those_users_viewed, products_those_users_commented)
        COLLECT key = product.key INTO iteractions_by_product
        SORT LENGTH(iteractions_by_product) DESC
        RETURN {key,
                viewings_count: SUM(iteractions_by_product[*].product.viewings_count),
                comments_count: SUM(iteractions_by_product[*].product.comments_count)})
FOR product IN products
    RETURN product
